openapi: 3.0.0
info:
  title: Contact Manager CRUD REST API
  description: Create-Retrieve-Update-Delete (CRUD) REST API for a contact manager website.
  contact:
    email: de465952@ucf.edu
    x-email2: ah442702@ucf.edu
    x-email3: matthew.eisenberg@ucf.edu
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.6
servers:
- url: http://cm.matthewe.me/testing/Backend
paths:
  /register.php:
    post:
      tags:
      - Users
      summary: Registers a new user.
      description: Registers a new user.
      operationId: register
      requestBody:
        description: Registration
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Register'
      responses:
        "200":
          description: Successfully registered account.
        "404":
          description: Cannot find URL path.
        "500":
          description: Internal server error.
  /login.php:
    post:
      tags:
      - Users
      summary: Logs into contact manager.
      description: Logs into contact manager.
      operationId: login
      requestBody:
        description: Login information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
      responses:
        "200":
          description: Successfully logged into account.
        "404":
          description: Cannot find URL path.
        "500":
          description: Internal server error.
  /addContact.php:
    post:
      tags:
      - Contacts
      summary: Adds a contact to user's contact manager.
      description: Adds a contact to user's contact manager.
      operationId: addContact
      requestBody:
        $ref: '#/components/requestBodies/Contact'
      responses:
        "200":
          description: Successfully added contact.
        "404":
          description: Cannot find URL path.
        "500":
          description: Internal server error.
  /deleteContact.php:
    post:
      tags:
      - Contacts
      summary: Deletes a contact from a user's contact manager.
      description: Deletes a contact from a user's contact manager.
      operationId: deleteContact
      requestBody:
        $ref: '#/components/requestBodies/Contact'
      responses:
        "200":
          description: Successfully deleted contact.
        "404":
          description: Cannot find URL path.
        "500":
          description: Internal server error.
  /editContact.php:
    post:
      tags:
      - Contacts
      summary: Edits a contact from a user's contact manager.
      description: Edits a contact from a user's contact manager.
      operationId: editContact
      requestBody:
        $ref: '#/components/requestBodies/Contact'
      responses:
        "200":
          description: Successfully edited contact.
        "404":
          description: Cannot find URL path.
        "500":
          description: Internal server error.
  /searchContact.php:
    post:
      tags:
      - Contacts
      summary: Searches for a contact from a user's contact manager.
      description: Searches for a contact from a user's contact manager.
      operationId: searchContact
      requestBody:
        description: Search information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Search'
      responses:
        "200":
          description: Successfully returned list of contacts with matching information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResults'
        "404":
          description: Cannot find URL path.
        "500":
          description: Internal server error.
components:
  schemas:
    Register:
      required:
      - confPassword
      - firstName
      - lastName
      - password
      - username
      type: object
      properties:
        firstName:
          type: string
          example: Bob
        lastName:
          type: string
          example: Bobbington
        username:
          type: string
          example: SirBobbingtonTheBob
        password:
          type: string
          example: secretsforbobby
        confPassword:
          type: string
          example: secretsforbobby
    Login:
      required:
      - password
      - username
      type: object
      properties:
        username:
          type: string
          example: example
          x-example2: deng
          x-example3: does_not_exist
        password:
          type: string
          example: example
          x-example2: wrong_pass
          x-example3: blank
    Contact:
      required:
      - email
      - firstName
      - lastName
      - userId
      type: object
      properties:
        id:
          type: integer
        userId:
          type: integer
          example: 38
        firstName:
          type: string
          example: Bob
        lastName:
          type: string
          example: Ross
        email:
          type: string
          example: BobRoss@gmail.com
    Search:
      required:
      - userId
      type: object
      properties:
        userId:
          type: integer
          example: 38
        search:
          type: string
          example: ""
        page:
          type: integer
          example: 1
    SearchResults:
      required:
      - count
      - results
      type: object
      properties:
        results:
          type: array
          example:
          - firstName: Michael
            lastName: Bob
            email: michael.bob@gmail.com
          - firstName: Jim
            lastName: Carrey
            email: realjcarrey@gmail.com
          items:
            type: object
        count:
          type: integer
          example: 2
  requestBodies:
    Contact:
      description: Contact information
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Contact'
